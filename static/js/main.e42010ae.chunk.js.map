{"version":3,"sources":["assets/img/logo.png","components/header/header.js","components/menu/menu.js","pages/home/home.js","components/rm/rm.js","pages/more/more.js","pages/characters/characters.js","pages/locations/locations.js","pages/episodes/episodes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","src","logo","alt","Link","to","Component","Menu","Fragment","Home","Helmet","menu_menu","header","RMERROR","type","More","rm_rm","Characters","state","isLoaded","error","characters","results","_this2","this","fetch","then","res","json","characterResponse","setState","console","log","map","e","key","id","image","height","width","name","status","gender","origin","location","episode","length","PureComponent","Locations","locations","locationResponse","dimension","residents","Episodes","episodes","episodesResponse","air_date","App","Switch","Route","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e42010ae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c620b645.png\";","import React, { Component } from 'react';\r\nimport { Switch, Route, Link } from 'react-router-dom';\r\nimport logo from 'assets/img/logo.png';\r\nclass Header extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"App-header\">\r\n        <div className=\"background-image\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        </div>\r\n        <p>Rick and Morty</p>\r\n\r\n        <ul>\r\n          <li><Link className=\"handwriting\" to=\"/episodes\">Episodes</Link></li>\r\n          <li><Link className=\"handwriting\" to=\"/characters\">Characters</Link></li>\r\n          <li><Link className=\"handwriting\" to=\"/locations\">Locations</Link></li>\r\n        </ul>\r\n      </header>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './menu.scss';\r\n\r\nclass Menu extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n      <nav>\r\n          <ul>\r\n            <li><Link to=\"/more\">Showcase 404</Link></li>\r\n          </ul>\r\n\r\n      </nav>\r\n\r\n      </>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Menu;\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport './home.scss';\r\nimport Header from 'components/header/header';\r\nimport Menu from 'components/menu/menu';\r\n\r\nconst Home = () => (\r\n  <>\r\n    <Helmet>\r\n      <title>Khara | Home</title>\r\n    </Helmet>\r\n    <Menu />\r\n    <div className=\"page-home\">\r\n      <Header />\r\n    </div>\r\n  </>\r\n);\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './rm.scss';\r\n\r\nclass RMERROR extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"background-img\">\r\n        <div className=\"space\"></div>\r\n        <div className=\"wrapper\">\r\n          <div className=\"img-wrapper\">\r\n          <span>44</span>\r\n          </div>\r\n          <p>The page you are looking for has been <br /> moved to another universe. </p>\r\n          <Link to=\"/\"><button type=\"button\">GET ME HOME</button></Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default RMERROR;\r\n","import React, { Component } from 'react';\r\nimport RMERROR from 'components/rm/rm';\r\n\r\nclass More extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"page-more\">\r\n        <RMERROR />\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default More;\r\n","import React, { PureComponent } from 'react';\r\nimport './characters.scss';\r\nimport Header from 'components/header/header';\r\nimport Menu from 'components/menu/menu';\r\n\r\nclass Characters extends PureComponent {\r\n  componentDidMount() {\r\n      fetch(\"https://rickandmortyapi.com/api/character\")\r\n        .then(res => res.json())\r\n        .then(\r\n          (characterResponse) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              characters: characterResponse,\r\n            });\r\n          },\r\n          () => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              error: true,\r\n            });\r\n          }\r\n        )\r\n  }\r\n  state = { isLoaded: false, error: false, characters: { results: [] } };\r\n  render() {\r\n    console.log(this.state.characters.results);\r\n    return (\r\n      <>\r\n        <Menu />\r\n        <Header />\r\n        <div className=\"wrap\">\r\n          <div className=\"character-list\">\r\n          {this.state.characters.results.map((e) => (\r\n            <div className=\"character-item\" key={e.id}>\r\n            <div className=\"character-image\"><img src={e.image} alt=\"character\" height=\"290\" width=\"290\"/></div>\r\n            <div className=\"character-name\">{e.name}</div>\r\n            <div className=\"character-status\"><span>Status</span><div className=\"right-align\">{e.status}</div></div>\r\n            <div className=\"character-type\"><span>Species</span><div className=\"right-align\">{e.type}</div></div>\r\n            <div className=\"character-gender\"><span>Gender</span><div className=\"right-align\">{e.gender}</div></div>\r\n            <div className=\"character-origin\"><span>Origin</span><div className=\"right-align\">{e.origin.name}</div></div>\r\n            <div className=\"character-location\"><span>Last known location</span><div className=\"right-align\">{e.location.name}</div></div>\r\n            <div className=\"character-episode\"><span>Appearance in episodes</span><div className=\"right-align\">{e.episode.length}</div></div>\r\n            </div>\r\n          ))}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n    }\r\n    }\r\n\r\nexport default Characters;\r\n","import React, { PureComponent } from 'react';\r\nimport './locations.scss';\r\nimport Header from 'components/header/header';\r\nimport Menu from 'components/menu/menu';\r\n\r\n\r\nclass Locations extends PureComponent {\r\n  componentDidMount() {\r\n      fetch(\"https://rickandmortyapi.com/api/location\")\r\n        .then(res => res.json())\r\n        .then(\r\n          (locationResponse) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              locations: locationResponse,\r\n            });\r\n          },\r\n          () => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              error: true,\r\n            });\r\n          }\r\n        )\r\n  }\r\n  state = { isLoaded: false, error: false, locations: { results: [] } };\r\n  render() {\r\n    console.log(this.state.locations.results);\r\n    return (\r\n      <>\r\n        <Menu />\r\n        <Header />\r\n        <div className=\"wrap\">\r\n          <div className=\"location-list\">\r\n            {this.state.locations.results.map((e) => (\r\n              <div className=\"location-item\" key={e.id}>\r\n                <div className=\"location-name\">{e.name}</div>\r\n                <div className=\"location-type\"><span>Type</span><div className=\"right-align\">{e.type}</div></div>\r\n                <div className=\"location-dimension\"><span>Dimension</span><div className=\"right-align\">{e.dimension}</div></div>\r\n                <div className=\"location-residents\"><span>Residents</span><div className=\"right-align\">{e.residents.length}</div></div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </>\r\n);\r\n}\r\n}\r\n\r\n\r\nexport default Locations;\r\n","import React, { PureComponent } from 'react';\r\nimport './episodes.scss';\r\nimport Header from 'components/header/header';\r\nimport Menu from 'components/menu/menu';\r\n\r\nclass Episodes extends PureComponent {\r\n  componentDidMount() {\r\n      fetch(\"https://rickandmortyapi.com/api/episode\")\r\n        .then(res => res.json())\r\n        .then(\r\n          (episodesResponse) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              episodes: episodesResponse,\r\n            });\r\n          },\r\n          () => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              error: true,\r\n            });\r\n          }\r\n        )\r\n  }\r\n  state = { isLoaded: false, error: false, episodes: { results: [] } };\r\n  render() {\r\n    console.log(this.state.episodes.results);\r\n    return (\r\n      <>\r\n        <Menu />\r\n        <Header />\r\n          <div className=\"wrap\">\r\n            <div className=\"episode-list\">\r\n              {this.state.episodes.results.map((e) => (\r\n                <div className=\"episode-item\" key={e.id}>\r\n                  <div className=\"episode-season\">{e.episode}</div>\r\n                  <div className=\"episode-name\"><span>Title</span><div className=\"right-align\">{e.name}</div></div>\r\n                  <div className=\"episode-date\"><span>Air date</span><div className=\"right-align\">{e.air_date}</div></div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Episodes;\r\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from 'pages/home/home';\nimport More from 'pages/more/more';\nimport Characters from 'pages/characters/characters.js';\nimport Locations from 'pages/locations/locations.js';\nimport Episodes from 'pages/episodes/episodes.js';\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Switch>\n          <Route exact path='/' component={Home}/>\n          <Route exact path='/more' component={More}/>\n          <Route exact path='/episodes' component={Episodes}/>\n          <Route exact path='/characters' component={Characters}/>\n          <Route exact path='/locations' component={Locations}/>\n        </Switch>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}